- name: Bootstrap Localdev
  hosts: localdev
  become: true  # Run as root

  vars_prompt:
    - name: git_real_name
      prompt: real name for git configuration?  Leave empty to skip.
      private: false

    - name: git_email
      prompt: email address git git configuration?  Leave empty to skip.
      private: false

    - name: github_access_token
      prompt: github access token?  Leave empty to skip.
      private: false

  pre_tasks:
    - name: attempt apt update
      ansible.builtin.apt:
        update_cache: true

  tasks:
    - name: apt upgrade
      ansible.builtin.apt:
        upgrade: full

    - name: Check if reboot required
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required_file

    - name: Reboot if required
      ansible.builtin.reboot:
      when: reboot_required_file.stat.exists == true

    - name: apt autoremove
      ansible.builtin.apt:
        autoremove: yes

    - name: install apt packages
      ansible.builtin.apt:
        pkg:
          - git
          - tmux
          - spice-vdagent  # needed by utm per https://docs.getutm.app/guest-support/linux/#spice-agent
          - bindfs  # needed by mount commands below

    # per https://docs.getutm.app/guest-support/linux/#virtfs
    - name: set up /mnt/share_raw using UTM shared file system
      ansible.posix.mount:
        src: share
        path: /mnt/share_raw
        fstype: 9p
        opts: trans=virtio,version=9p2000.L,rw,_netdev,nofail
        state: mounted

    # per https://docs.getutm.app/guest-support/linux/#fixing-permission-errors
    - name: set up /mnt/share using bindfs to fix UTM sharing permission errors
      ansible.posix.mount:
        src: /mnt/share_raw
        path: /mnt/share
        fstype: fuse.bindfs
        opts: map=501/1000:@20/@1000,x-systemd.requires=/mnt/share_raw
        state: mounted

    # https://github.com/tmux-plugins/tpm
    - name: install tmux plugin manager
      ansible.builtin.shell: git clone https://github.com/tmux-plugins/tpm /home/krelinga/.config/tmux/plugins/tpm
      args:
        creates: /home/krelinga/.config/tmux/plugins/tpm
      become: false
      notify:
        - tmux_plugin_manager_manual

    # https://github.com/neovim/neovim/blob/master/INSTALL.md#snap
    - name: install neovim
      community.general.snap:
        classic: true
        channel: beta
        name: nvim
      notify:
        - nvim_lazy_manual

    - name: set git real name
      community.general.git_config:
        scope: global
        name: user.name
        value: '{{ git_real_name }}'
      become: false
      when: git_real_name | length > 0

    - name: set git email
      community.general.git_config:
        scope: global
        name: user.email
        value: '{{ git_email }}'
      become: false
      when: git_email | length > 0

    - name: set git credential config
      community.general.git_config:
        scope: global
        name: credential.helper
        value: store
      become: false

    - name: store github credentials
      ansible.builtin.copy:
        content: 'https://krelinga:{{ github_access_token }}@github.com'
        dest: /home/krelinga/.git-credentials
        mode: "0600"
      become: false
      when: github_access_token | length > 0

    - name: set git default branch
      community.general.git_config:
        scope: global
        name: init.defaultBranch
        value: main
      become: false

    - name: set up dotfiles
      ansible.builtin.shell: |
        cd /home/krelinga && \
        git init && \
        git remote add origin https://github.com/krelinga/dotfiles.git && \
        git fetch && \
        git checkout -f main
      args:
        creates: /home/krelinga/.dotfiles-repo-was-setup
      become: false
      notify:
        - tmux_plugin_manager_manual
        - nvim_lazy_manual

    # per https://go.dev/doc/install
    - name: install go 21.5
      ansible.builtin.shell: |
        curl -L https://go.dev/dl/go1.21.5.linux-arm64.tar.gz > /root/go1.21.5.linux-arm64.tar.gz && \
        tar -C /usr/local -xzf /root/go1.21.5.linux-arm64.tar.gz && \
        rm /root/go1.21.5.linux-arm64.tar.gz
      args:
        creates: /usr/local/go

    - name: add go binaries to $PATH
      ansible.builtin.copy:
        content: 'export PATH=$PATH:/usr/local/go/bin'
        dest: /etc/profile.d/go.sh
        mode: "0644"

  handlers:
    - name: tmux_plugin_manager_manual
      ansible.builtin.pause:
        prompt: 'log in to localdev, start tmux, and type "CTRL-b I"'

    # per https://www.lazyvim.org/installation
    - name: nvim_lazy_manual
      ansible.builtin.pause:
        prompt: 'log in to localdev, start nvim, and type ":checkhealth"'
