- name: Bootstrap Docker Localdev
  hosts: 127.0.0.1
  become: true  # Run as root
  connection: local

  vars:
    git_real_name: ""
    git_email: ""

  tasks:
    - name: add macbook ssh public key
      ansible.posix.authorized_key:
        user: krelinga
        state: present
        key: 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICtJUwp8OISxPLaekC9cD9DBi6j6JXoMAll6dUeoH+uK'

    - name: install apt packages
      ansible.builtin.apt:
        pkg:
          - git
          - tmux
          - gcc  # LazyVim really wants this.

    # https://github.com/tmux-plugins/tpm
    - name: install tmux plugin manager
      ansible.builtin.shell: git clone https://github.com/tmux-plugins/tpm /home/krelinga/.config/tmux/plugins/tpm
      args:
        creates: /home/krelinga/.config/tmux/plugins/tpm
      become: false

    # https://github.com/neovim/neovim/blob/master/INSTALL.md#snap
#    - name: install neovim
#      community.general.snap:
#        classic: true
#        channel: beta
#        name: nvim

    - name: set git real name
      community.general.git_config:
        scope: global
        name: user.name
        value: '{{ git_real_name }}'
      become: false
      when: git_real_name | length > 0

    - name: set git email
      community.general.git_config:
        scope: global
        name: user.email
        value: '{{ git_email }}'
      become: false
      when: git_email | length > 0

    - name: set git default branch
      community.general.git_config:
        scope: global
        name: init.defaultBranch
        value: main
      become: false

#    - name: set up dotfiles
#      ansible.builtin.shell: |
#        cd /home/krelinga && \
#        git init && \
#        git remote add origin git@github.com:krelinga/dotfiles.git && \
#        GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no" git fetch && \
#        git checkout -f main
#      args:
#        creates: /home/krelinga/.dotfiles-repo-was-setup
#      become: false

    # per https://go.dev/doc/install
    - name: install go 21.5
      ansible.builtin.shell: |
        curl -L https://go.dev/dl/go1.21.5.linux-arm64.tar.gz > /root/go1.21.5.linux-arm64.tar.gz && \
        tar -C /usr/local -xzf /root/go1.21.5.linux-arm64.tar.gz && \
        rm /root/go1.21.5.linux-arm64.tar.gz
      args:
        creates: /usr/local/go

    - name: add go binaries to $PATH
      ansible.builtin.copy:
        content: 'export PATH=$PATH:/usr/local/go/bin'
        dest: /etc/profile.d/go.sh
        mode: "0644"

    # per https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
    - name: add docker's gpg key
      ansible.builtin.shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
        chmod a+r /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: add docker's repository to apt sources
      ansible.builtin.shell: |
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list
      register: add_docker_repository

    - name: apt update after adding docker's repository to apt sources
      ansible.builtin.apt:
        update_cache: true
      when: add_docker_repository.changed

    - name: apt install docker
      ansible.builtin.apt:
        pkg:
          - docker-ce  # Is this really needed if the Daemon is running on some other machine?
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
