- name: Run certbot and cleanup
  block:
    - name: Ensure certbot_certs volume exists
      changed_when: false
      community.docker.docker_volume:
        name: certbot_certs
        state: present
        driver: local
        driver_options:
          type: cifs
          device: "//truenas.i.krel.ing/certs"
          # mfsymlinks is needed because certbot creates symlinks in this volume
          o: "username=certbot,password={{ lookup('bitwarden.secrets.lookup', '177d591f-fc2f-466b-9f7c-b2d0003349d0') }},file_mode=0660,dir_mode=0770,rw,vers=3.0,mfsymlinks"

    - name: Ensure certbot.ini file exists
      changed_when: false
      ansible.builtin.copy:
        dest: "/home/{{ ansible_user }}/certbot.ini"
        content: "dns_cloudflare_api_token = {{ lookup('bitwarden.secrets.lookup', '6165a285-5afb-48bc-b34b-b2d000e77007') }}"
        mode: '0600'

    - name: Run certbot
      ansible.builtin.command:
        cmd: >
          docker run --rm -it
          -v certbot_certs:/etc/letsencrypt
          -v "/home/{{ ansible_user }}/certbot.ini:/tmp/cloudflare.ini:ro"
          certbot/dns-cloudflare:latest
          certonly
          -w /etc/letsencrypt
          -d i.krel.ing
          -d "*.i.krel.ing"
          -d "*.dev.i.krel.ing"
          --email {{ lookup('bitwarden.secrets.lookup', '0399d176-38cf-4591-a096-b2cb0187c42d') }}
          --agree-tos
          --non-interactive
          --dns-cloudflare
          --dns-cloudflare-credentials /tmp/cloudflare.ini
          --expand
      register: tls_cert_fetch
      changed_when: "'Successfully received certificate.' in tls_cert_fetch.stdout"

  always:
    - name: Remove certbot.ini file
      changed_when: false
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/certbot.ini"
        state: absent

    - name: Remove certbot_certs volume
      changed_when: false
      community.docker.docker_volume:
        name: certbot_certs
        state: absent
