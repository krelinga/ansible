- name: Config Wifi APs
  hosts: wifi

  vars:
    dns_server: '10.86.14.1'

  roles:
    - gekmihesg.openwrt

  tasks:
    - name: copy authorized keys
      ansible.builtin.copy:
        dest: "/etc/dropbear/authorized_keys"
        content: "{{ lookup('ansible.builtin.url', 'https://github.com/krelinga.keys', split_lines=false) }}"
        owner: root
        group: root
        mode: "0600"

    - name: Revert any uncommittted UCI changes
      uci:
        command: revert

    # uci add_list network.lan.dns='10.86.14.1'
    - name: Get list of exisitng LAN config options
      uci:
        command: show
        key: network.lan
      register: existing_lan_config
    - name: Check if any non-default DNS servers are already configured
      set_fact:
        has_existing_dns: "{{ 'network.lan.dns' in existing_lan_config.result }}"
    - name: Get exisitng non-default DNS servers
      uci:
        command: get
        key: network.lan.dns
      register: existing_dns
      when: has_existing_dns
    - name: Delete any unwanted non-default DNS servers
      uci:
        command: del_list
        key: network.lan.dns
        value: "{{ item }}"
      loop: "{{ existing_dns.result_list }}"
      when: "has_existing_dns and item != dns_server"
      notify: UCI Commit
    - name: Add the desired non-default DNS server
      uci:
        command: add_list
        key: network.lan.dns
        value: "{{ dns_server }}"
        unique: true
      notify: UCI Commit

    # uci set dhcp.lan.ignore='1'
    - name: Get list of existing DHCP options
      uci:
        command: show
        key: dhcp.lan
      register: existing_dhcp_config
    - name: Check if the option to ignore LAN for DHCP is already set
      set_fact:
        has_existing_dhcp_ignore: "{{ 'dhcp.lan.ignore' in existing_dhcp_config.result }}"
    - name: Get current value of DHCP LAN ignore option
      uci:
        command: get
        key: dhcp.lan.ignore
      register: existing_dhcp_ignore
      when: has_existing_dhcp_ignore
    - name: Set the DHCP LAN ignore option
      uci:
        command: set
        key: dhcp.lan.ignore
        value: '1'
      notify: UCI Commit
      when: "not has_existing_dhcp_ignore or existing_dhcp_ignore.result != '1'"

  handlers:
    - name: UCI Commit
      uci:
        command: commit